<?xml version="1.0" encoding="UTF-8"?>

<typeSystemDescription xmlns="http://uima.apache.org/resourceSpecifier">
    <name>TypeSystem</name>
    <description>This Descriptor is used for generating the types that will be used in this system.</description>
    <version>1.0</version>
    <vendor>Jerry Sun&lt;chens1&gt;</vendor>
  <types>
    <typeDescription>
      <name>hw1.type.General</name>
      <description>This is a base type inherited by all the types.&lt;/br&gt;
It should include all the shared features the types in the system has.&lt;/br&gt;</description>
      <supertypeName>uima.tcas.Annotation</supertypeName>
      <features>
        <featureDescription>
          <name>confidence</name>
          <description>This indicates the confidence we have when we set a cas object a type.&lt;/br&gt;
Confidence may have a value of [0,1].</description>
          <rangeTypeName>uima.cas.Double</rangeTypeName>
        </featureDescription>
        <featureDescription>
          <name>processorID</name>
          <description>A type should also tell  who creates the Object instance by using the processor id to distinguish.&lt;/br&gt;</description>
          <rangeTypeName>uima.cas.String</rangeTypeName>
        </featureDescription>
      </features>
    </typeDescription>
    <typeDescription>
      <name>hw1.type.input.Question</name>
      <description>It simply inherits from General type. It has the same fields of General. But a General class should nevered be instanced. Thus a new type is in need to correspond to the Question type.&lt;/br&gt;
Both Question and Answer do not embed Token. &lt;/br&gt; See the document for details.</description>
      <supertypeName>hw1.type.General</supertypeName>
    </typeDescription>
    <typeDescription>
      <name>hw1.type.input.Answer</name>
      <description>An answer type should simply have a General type's fields and further more have a boolean to indicate whether the answer is a right answer.
See &lt;bold&gt;isCorrect&lt;/bold&gt; for more info.</description>
      <supertypeName>hw1.type.General</supertypeName>
      <features>
        <featureDescription>
          <name>isCorrect</name>
          <description>isCorrect, as the document tells, should be used to tell whether the answer is a right answer. It is part of the input and it should be covered in the Answer type. &lt;/br&gt;By the way, the text span of answer should not cover the boolean field of input.</description>
          <rangeTypeName>uima.cas.Boolean</rangeTypeName>
        </featureDescription>
      </features>
    </typeDescription>
    <typeDescription>
      <name>hw1.type.input.Token</name>
      <description>A Token type is used when the analyzer need to analyze on the token level rather than a sentence level. A token should be tokenized by space and comma, "," and "?".&lt;/br&gt;
A token span should simply cover the text and it shuold simply inherit from General class.</description>
      <supertypeName>hw1.type.General</supertypeName>
    </typeDescription>
    <typeDescription>
      <name>hw1.type.input.NGram</name>
      <description>An NGram should contain the tokens span it uses to generate an NGram. So an array of tokens should be put to indicate the text span of the NGram. &lt;/br&gt; The array length should not be limited since the NGram may have one, two or three NGrams.</description>
      <supertypeName>hw1.type.General</supertypeName>
      <features>
        <featureDescription>
          <name>elements</name>
          <description>The elements array actually contain an Token array the NGram uses to generate it self. &lt;/br&gt;With this, neighbour NGrams could connect each other.</description>
          <rangeTypeName>uima.cas.FSArray</rangeTypeName>
          <elementType>hw1.type.input.Token</elementType>
          <multipleReferencesAllowed>true</multipleReferencesAllowed>
        </featureDescription>
      </features>
    </typeDescription>
    <typeDescription>
      <name>hw1.type.input.NGramList</name>
      <description>It combines the NGrams to a NGram list where each NGram in a list is generated by the same answer.&lt;/br&gt; In this way, an Answer corresponds to exactly one NGram list.</description>
      <supertypeName>hw1.type.General</supertypeName>
      <features>
        <featureDescription>
          <name>NGrams</name>
          <description>The NGrams contains a list of NGRams. They are all from one answer sentence.</description>
          <rangeTypeName>uima.cas.FSList</rangeTypeName>
          <elementType>hw1.type.input.NGram</elementType>
          <multipleReferencesAllowed>true</multipleReferencesAllowed>
        </featureDescription>
      </features>
    </typeDescription>
    <typeDescription>
      <name>hw1.type.output.AnswerScore</name>
      <description>This answer score type serves as a middle type where it combines an answer with an score.&lt;/br&gt; See the documentation for why not inherting them directly.&lt;/br&gt;This type simplies puts the two together aand for sorting and final output.</description>
      <supertypeName>hw1.type.General</supertypeName>
      <features>
        <featureDescription>
          <name>score</name>
          <description>The score is used to describe the score of an answer with varioud answer scoring methods.</description>
          <rangeTypeName>uima.cas.Double</rangeTypeName>
        </featureDescription>
        <featureDescription>
          <name>answer</name>
          <description>The answer of the Answerscore type. An embed instance rather than a extend class. This is useful when you try to modify Answer type. Little or no modification is needed for AnswerScore type.</description>
          <rangeTypeName>hw1.type.input.Answer</rangeTypeName>
        </featureDescription>
      </features>
    </typeDescription>
    <typeDescription>
      <name>hw1.type.output.Evaluator</name>
      <description>This type is used for final formatted output for this an evaluation processs.&lt;/br&gt;
The Question, AnswerScore are needed.&lt;/br&gt;
Meanwhile the totalNumberOfAnswer (the N), pickedRightAnswer, and precision are also included so that we can evaluate the effectiveness of the Analyzer.</description>
      <supertypeName>uima.tcas.Annotation</supertypeName>
      <features>
        <featureDescription>
          <name>question</name>
          <description>Initial question is input here for information.</description>
          <rangeTypeName>hw1.type.input.Question</rangeTypeName>
        </featureDescription>
        <featureDescription>
          <name>answers</name>
          <description>All the input answers are output and sorted according to their score in the evaluation process. Also, isCorrect is used to indicate whether the answer is right.</description>
          <rangeTypeName>uima.cas.FSArray</rangeTypeName>
          <elementType>hw1.type.output.AnswerScore</elementType>
          <multipleReferencesAllowed>true</multipleReferencesAllowed>
        </featureDescription>
        <featureDescription>
          <name>totalRightAnswers</name>
          <description>The total number of Right Answers the input has.</description>
          <rangeTypeName>uima.cas.Integer</rangeTypeName>
        </featureDescription>
        <featureDescription>
          <name>pickedRightAnswers</name>
          <description>Right answers that are picked by the evluation processors according to their score in the first N answers.</description>
          <rangeTypeName>uima.cas.Integer</rangeTypeName>
        </featureDescription>
        <featureDescription>
          <name>precision</name>
          <description>precision = pickedRightAnswers/ totalRightAnswers &lt;/br&gt;
precision has a values between [0, 1].</description>
          <rangeTypeName>uima.cas.Double</rangeTypeName>
        </featureDescription>
      </features>
    </typeDescription>
  </types>
</typeSystemDescription>
